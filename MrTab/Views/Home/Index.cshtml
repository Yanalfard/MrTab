@{
    ViewBag.Title = "فودستان ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link href="~/css/Pages/Index.min.css" rel="stylesheet" />
}

<partial name="Hero" />

<div class="uk-container">

    <!-- #region Grid -->

    <div class="grid-categories uk-margin-medium-top">
        @await Component.InvokeAsync("CategoryGridShowInHomeVm")

    </div>

    <!-- #endregion -->
    @await Component.InvokeAsync("CategoryShowInHomeVm")
    @*<partial name="_RestaurantCarousel" />

        <partial name="_RestaurantCarousel" />*@

</div>

<!-- #region Parallax -->

<div class="parallax-download uk-margin-medium-top uk-height-large uk-background-cover uk-overflow-hidden uk-light uk-flex uk-flex-top"
     uk-parallax="bgy: -300">
    <div class="parralax-overlay-blur"></div>
    <div class="parralax-content uk-width-1-2-at-l uk-width-2-3-at-m uk-width-4-5-at-s column uk-text-center uk-margin-auto uk-margin-auto-vertical">
        <h1 class=" uk-margin-auto">دانلود اپلیکیشن</h1>
        <p class="uk-margin-left uk-margin-right uk-margin-remove-top">
            یا صفحه بندی شده بعد از اینکه متن در آن قرار گیرد چگونه به نظر می‌رسد و قلم‌ها و اندازه‌بندی‌ها چگونه د آنها به نوعی وابسته به متن می‌باشد آنها با استفاد ساختگی، صفحه گرافیکی خود
        </p>
        <button class="uk-margin-auto-left uk-margin-auto-right btn btn-primary btn-round btn-pwa">
            <span class="uk-margin-auto-vertical">دانلود</span>
            <span uk-icon="phone-portrait-outline"></span>
        </button>
    </div>
</div>

<!-- #endregion -->

<div class="uk-container">
    @await Component.InvokeAsync("CategoryShowInHomeSingleVm")
</div>

@section Scripts {

    <script>

        //const categories = [
        //    'کافه',
        //    'رستوران',
        //    'فست فود',
        //    'دونر',
        //    'نوتلا'
        //];
        function txtTypeChanged(val) {
            const drop = document.getElementById('drop');

            UIkit.drop(document.getElementsByClassName('category-drop')[0]).show();

            drop.innerHTML = '';
            for (let cat of categories.filter(i => i.includes(val))) {
                const li = document.createElement('li');
                li.innerText = cat;
                li.addEventListener('click', () => {
                    document.getElementById('txtCategory').value = cat;
                    UIkit.drop(document.getElementsByClassName('category-drop')[0]).hide(0);
                });
                drop.appendChild(li);
            }
            if (drop.children.length == 0) {
                UIkit.drop(document.getElementsByClassName('category-drop')[0]).hide(0);
            }
        }

        txtTypeChanged('');
        UIkit.drop(document.getElementsByClassName('category-drop')[0]).hide(0);

    </script>

}
